server:
  port: 8080
spring:
  application:
    name: "gateway"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:8090/issuer"
          client-id: "autentication-client"
  cloud:
    gateway:
      routes:
        - id: autentication-service
          uri: http://localhost:8090
          predicates:
            - Path=/api/autentication/**
          filters:
            - RewritePath=/api/autentication/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: autenticationCircuitBreaker
                fallbackUri: forward:/fallback/autentication

        - id: solicitudes-service
          uri: http://localhost:8091
          predicates:
            - Path=/api/solicitudes/**
          filters:
            - RewritePath=/api/solicitudes/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: solicitudesCircuitBreaker
                fallbackUri: forward:/fallback/solicitudes
jwt:
  json-exp-roles: "/roles"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      autenticationCircuitBreaker:
        baseConfig: default
      solicitudesCircuitBreaker:
        baseConfig: default
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
